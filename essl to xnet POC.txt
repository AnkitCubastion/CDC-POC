CDC (change data capture)

mssql

debezium

kafka

mysql

-----

winget install sqlcmd (windows cli for mssqlserver)

sqlcmd -S localhost -U sa -P "Cubastion@123" -i ./mssql/init.sql

sqlcmd -S localhost -U sa -P "Cubastion@123"

docker exec -it cdc-poc-mysql-1 /bin/bash

mysql -u root -p

-----
important step

EXEC sys.sp_cdc_enable_db;
GO

EXEC sys.sp_cdc_enable_table
    @source_schema = N'dbo',
    @source_name   = N'employee_logs',
    @role_name     = NULL,
    @filegroup_name = NULL,
    @supports_net_changes = 0;
GO

-----

#docker-compose.yaml

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: "Cubastion@123"
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - "1433:1433"
    volumes:
      - ./mssql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - sqlserver_data:/var/opt/mssql

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: "Cubastion@123"
      MYSQL_DATABASE: "employees_db"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql

  connect:
    image: debezium/connect:2.6
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - sqlserver
      - mysql
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-group
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_PLUGIN_PATH: /kafka/connect

volumes:
  sqlserver_data:
  mysql_data:

-----

#sqlserver-connector.json

{
  "name": "mssql-employee-connector",
  "config": {
    "connector.class": "io.debezium.connector.sqlserver.SqlServerConnector",
    "database.hostname": "sqlserver",
    "database.port": "1433",
    "database.user": "sa",
    "database.password": "Cubastion@123",
    "database.names": "employee_db",
    "database.history.kafka.bootstrap.servers": "kafka:9092",
    "database.history.kafka.topic": "schema-changes.employee",
    "schema.history.internal.kafka.bootstrap.servers": "kafka:9092",
    "schema.history.internal.kafka.topic": "schema-changes.employee",
    "table.include.list": "dbo.employee_logs",
    "topic.prefix": "mssqlserver",
    "database.encrypt": "false",
    "database.trustServerCertificate": "false"
  }
}

-----

mysql-connector.json

{
  "name": "mysql-sink-connector",
  "config": {
    "connector.class": "io.debezium.connector.jdbc.JdbcSinkConnector",
    "tasks.max": "1",
    "topics": "mssqlserver.employee_db.dbo.employee_logs",
    "connection.url": "jdbc:mysql://mysql:3306/employees_db",
    "connection.username": "root",
    "connection.password": "Cubastion@123",
    "insert.mode": "upsert",
    "primary.key.mode": "record_value",
    "primary.key.fields": "id",
    "schema.evolution": "none",
    "table.name.format": "employee_logs"
  }
}

-----

curl -X GET http://localhost:8083/connectors

curl -X POST -H "Content-Type: application/json" --data @sqlserver-connector.json http://localhost:8083/connectors

curl http://localhost:8083/connectors/mssql-employee-connector/status

curl -X DELETE http://localhost:8083/connectors/mssql-employee-connector

curl -X POST -H "Content-Type: application/json" --data @mysql-connector.json http://localhost:8083/connectors

curl http://localhost:8083/connectors/mysql-sink-connector/status

curl -X DELETE http://localhost:8083/connectors/mysql-sink-connector

-----